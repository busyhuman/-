#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
string arr[1002];
int dy[4] = {-1,0,1,0}, dx[4] = {0,1,0,-1};
vector<double> candidate;
int area, peri, ma, mp, n;
void dfs(int y, int x){
	for(int i=0;i<4;i++){
		int imsiy = y + dy[i], imsix = x + dx[i];

		if( imsiy >= n || imsix >= n || imsiy < 0 || imsix < 0 ){
			peri++;
			continue;
		}
		if(arr[imsiy][imsix] == '.') peri++;
		
		if(arr[imsiy][imsix] == '#'){
			arr[imsiy][imsix] = 'z';
			area++;
			dfs(imsiy, imsix);	
		}
	}
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n;
	for(int i=0;i<n;i++) cin >> arr[i];

	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			if(arr[i][j] == '#'){
				area=1;
				peri=0;
				arr[i][j] = 'z';
				dfs(i, j);
				if(ma <= area){
					if(ma == area) mp = min(mp, peri);
					else{
						ma = area;
						mp = peri;	
					}
				}
			}
	cout << ma << ' ' << mp;
}
