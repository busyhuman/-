#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int n,arr[100001];
int dp[100001], dp2[100001], dp3[100001];
int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n;
	for(int i=1;i<=n;i++){
		char c;
		cin >> c;
		if(c == 'P') arr[i] = 2;
		else if(c == 'H') arr[i] = 1;
		else arr[i] = 3;
	}
	
	for(int i=1;i<=n;i++){
		if(arr[i] == 1) {
			dp[i] = 1 + dp[i-1];
			dp2[i] = dp2[i-1];
			dp3[i] = dp3[i-1];
		}
		else if(arr[i] == 2) {
			dp[i] = dp[i-1];
			dp2[i] = 1 + dp2[i-1];
			dp3[i] = dp3[i-1];
		}
		else if(arr[i] == 3) {
			dp[i] = dp[i-1];
			dp2[i] = dp2[i-1];
			dp3[i] = 1 + dp3[i-1];
		}
	}
	int ans = 0;
	for(int i=1;i<=n;i++){
		ans = max(ans, dp[i] + dp2[n] - dp2[i]);
		ans = max(ans, dp[i] + dp3[n] - dp3[i]);
		ans = max(ans, dp2[i] + dp[n] - dp[i]);
		ans = max(ans, dp2[i] + dp3[n] - dp3[i]);
		ans = max(ans, dp3[i] + dp[n] - dp[i]);
		ans = max(ans, dp3[i] + dp2[n] - dp2[i]);
	}
	cout << ans;
}
