#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
vector< tuple<int,int,int> > arr;
int dp[200001], ans[200001], dp2[200001];
int main() {
	int n;
	cin >> n;
	for(int i=0;i<n;i++){
		int su, su2;
		scanf("%d %d",&su, &su2);
		arr.push_back(make_tuple(su2,su,i));
	}
	sort(arr.begin(), arr.end());
	
	long long sum = 0;
	sum = dp[get<1>(arr[0])] = get<0>(arr[0]);
    dp2[get<0>(arr[0])] += get<0>(arr[0]);
	for(int i=1;i<n;i++){
        ans[get<2>(arr[i])] = sum - dp[get<1>(arr[i])] - dp2[get<0>(arr[i])];
//		cout << sum << " " << dp[get<1>(arr[i])] << " " << dp2[get<0>(arr[i])] << " " << get<2>(arr[i]) << '\n';
        if(get<0>(arr[i]) == get<0>(arr[i-1]) && get<1>(arr[i]) == get<1>(arr[i-1]) ) ans[get<2>(arr[i])] = ans[get<2>(arr[i-1])];
        dp2[get<0>(arr[i])] += get<0>(arr[i]);
		dp[get<1>(arr[i])] += get<0>(arr[i]);
		sum += get<0>(arr[i]);
	}
	for(int i=0;i<n;i++) cout << ans[i] << '\n';
}
