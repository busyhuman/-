#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int n, m;
double s, v;
double gy[101], gx[101];
vector<int> arr[101];
int hole[101];
bool visit[101];

int dfs(int now){
	visit[now] = true;
	int len = arr[now].size();
	for(int i=0;i<len;i++){
		int su = arr[now][i];
		
		if( hole[su] == 0 || ( visit[ hole[su] ] == false && dfs( hole[su] ) )){
			hole[su] = now;
			return 1;
		}
	}
	return 0;
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
    cin >> n >> m >> s >> v;
	for(int i=1;i<=n;i++){
		cin >> gy[i] >> gx[i];
	}
	
	for(int i=1;i<=m;i++){
		double yy,xx;
		cin >> yy >> xx;
		for(int j=1;j<=n;j++){
			double dist = sqrt( pow(abs(yy-gy[j]),2) + pow(abs(xx-gx[j]),2) );
			if(dist <= s*v) arr[j].push_back(i);
		}
	}
	int res = 0;
	for(int i=1;i<=n;i++){
		memset(visit, false ,sizeof(visit) );
		res += dfs(i);
	}
	cout << n-res;
}
