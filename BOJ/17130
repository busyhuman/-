#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int n, m, dy[3] = {-1,0,1}, dx[3] = {1,1,1}, dp[1001][1001];
string arr[1001];
int bfs(int sy, int sx){
	int ans = -1;
	queue<int> y, x;
	dp[sy][sx] = 0;
	y.push(sy);
	x.push(sx);
	while( !x.empty() ){
		int yf = y.front(), xf = x.front();
	//	cout << yf << ' ' << xf << '\n';
		y.pop(), x.pop();
		if( arr[yf][xf] == 'O'){
			ans = max(ans, dp[yf][xf]);
		}
		for(int i=0;i<3;i++){
			int imsiy = yf+dy[i], imsix = xf+dx[i];
			if( imsiy < 0 || imsiy >= n || imsix < 0 || imsix >= m) continue;
			if( arr[imsiy][imsix] == '#') continue;
			int cnt = 0;
			if( arr[imsiy][imsix] == 'C') cnt = 1;
			if( dp[yf][xf] + cnt > dp[imsiy][imsix]){
				dp[imsiy][imsix] = dp[yf][xf] + cnt;
				y.push(imsiy);
				x.push(imsix);
			}
		}
	}
	return ans;
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	int sy=0, sx=0;
	for(int i=0;i<n;i++) cin >> arr[i];
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(arr[i][j] == 'R'){
				sy = i;
				sx = j;
				goto End;
			}
		}
	}
	End:
	memset(dp, -1, sizeof(dp) );
	cout << bfs(sy, sx);
}
