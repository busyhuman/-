#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
string arr[502];
bool check[502][502];
int n, m;

void dfs(int y, int x){

//	cout << y << " " << x << '\n';
	if(y < n-1 && arr[y+1][x] == 'U' && !check[y+1][x]){
		check[y+1][x] = true;
		dfs(y+1, x);
	}
	if( y > 0 && arr[y-1][x] == 'D' && !check[y-1][x]){
		check[y-1][x] = true;
		dfs(y-1, x);
	}
	if(x < m-1 && arr[y][x+1] == 'L' && !check[y][x+1]){
		check[y][x+1] = true;
		dfs(y, x+1);
	}
	if(x > 0 && arr[y][x-1] == 'R' && !check[y][x-1]){
		check[y][x-1] = true;
		dfs(y, x-1);
	}
}
			 
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	for(int i=0;i<n;i++) cin >> arr[i];
	
	for(int i=0;i<m;i++){
		if(arr[0][i] == 'U') {
			check[0][i] = true;
			dfs(0, i);
		}
	}
	
	for(int i=0;i<m;i++){
		if(arr[n-1][i] == 'D') {
			check[n-1][i] = true;
			dfs(n-1, i);
		}
	}
	
	for(int i=0;i<n;i++){
		if(arr[i][0] == 'L') {
			check[i][0] = true;
			dfs(i, 0);
		}
	}
	
	for(int i=0;i<n;i++){
		if(arr[i][m-1] == 'R') {
		
			check[i][m-1] = true;
			dfs(i, m-1);
		}
	}
	long long ans = 0;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(check[i][j]) ans++;
		}
	}
	cout << ans;
}
