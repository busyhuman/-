#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int n, m;
int mooY[100001], mooX[100001];
bool visit[100001];
int ans=inf;
vector<int> arr[100001];

int bfs(int now){
	vector<int> imsiArr;
	queue<int> q;
	q.push(now);
	visit[now] = true;
	imsiArr.push_back(now);
	
	while( !q.empty() ){
		int qf = q.front();
		q.pop();
		
		int len = arr[qf].size();
		
		for(int i=0;i<len;i++){
			int su = arr[qf][i];
			
			if( visit[su] == false){
				visit[su] = true;
				imsiArr.push_back(su);
				q.push(su);
			}
				
		}
		
	}
	int maxy=-1,miny=inf,maxx=-1,minx=inf;
	int lenlen = imsiArr.size();
	for(int i=0;i<lenlen;i++){
		int su = imsiArr[i];
		maxy = max(maxy, mooY[su]);
		maxx = max(maxx, mooX[su]);
		miny = min(miny, mooY[su]);
		minx = min(minx, mooX[su]);
	}
	return (maxy - miny + maxx - minx) * 2;
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
    cin >> n >> m;
	for(int i=1;i<=n;i++)
		cin >> mooX[i] >> mooY[i];
	
	for(int i=0;i<m;i++){
		int x, y;
		cin >> x >> y;
		arr[x].push_back(y);
		arr[y].push_back(x);
	}
	
	for(int i=1;i<=n;i++){
		if( visit[i] == false){
			ans = min(ans,bfs(i));
		}
	}
	cout << ans;
}
