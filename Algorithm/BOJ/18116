#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int n, counting[1000001], parent[1000001];
int find(int u){
	if( u == parent[u]) return u;
	return parent[u] = find(parent[u]);
}
void uni(int a, int b){
	a = find(a);
	b = find(b);
	if( a == b) return;
	if(counting[a] < counting[b]){
		counting[b] += counting[a];
		counting[a] = 0;
		parent[a] = b;
	}
	else{
		counting[a] += counting[b];
		counting[b] = 0;
		parent[b] = a;
	}
}
int main() {
    cin.sync_with_stdio(false);
	cin.tie(NULL);
	for(int i=1;i<=1000000;i++){
		parent[i] = i;
		counting[i] = 1;
	}
	cin >> n;
	while(n--){
		char order;
		int x;
		cin >> order;
		if( order == 'I'){
			int y;
			cin >> x >> y;
			uni(x,y);
		}
		else if( order == 'Q'){
			cin >> x;
			cout << counting[ find(x) ] << '\n';
		}
	}
}
