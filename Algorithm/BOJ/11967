#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int n,m,dy[4]={-1,0,1,0},dx[4]={0,1,0,-1},ans=1;
vector< pair<int,int> > arr[101][101];
bool room[101][101], visit[101][101];
bool bfs(){
	bool check = false;
	queue<int> x,y;
	x.push(1);
	y.push(1);
	visit[1][1]=true;
	room[1][1]=true;
	memset(visit, false, sizeof(visit) );
	while(!x.empty()){
		int xf = x.front(), yf = y.front();
		x.pop(), y.pop();
		int len = arr[xf][yf].size();
		for(int i=0;i<len;i++){
			int su1 = arr[xf][yf][i].first, su2 = arr[xf][yf][i].second;
			if( room[su1][su2] == false){
				room[su1][su2] = true;
				ans++;
				check = true;
			}
		}
		
		for(int i=0;i<4;i++){
			int imsix = xf + dx[i], imsiy = yf + dy[i];
			if(imsix < 1 || imsiy < 1 || imsix > n || imsiy > n) continue;
			if(visit[imsix][imsiy] == false && room[imsix][imsiy] == true){
				visit[imsix][imsiy] = true;
				x.push(imsix);
				y.push(imsiy);
			}
		}
		
	}
	return check;
}
int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	while(m--){
		int x1,y1,x2,y2;
		cin >> x1 >> y1 >> x2 >> y2;
		arr[x1][y1].push_back( make_pair(x2,y2) );
	}
	while( bfs() ){ }
	cout << ans;
}
