#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <list>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
vector< pair<int,int> > v,two;
int arr[9][9],n,m,arr2[9][9],dy[4] = {-1,0,1,0}, dx[4] = {0,1,0,-1}, maxi=-1;
void bfs(){
    queue<int> y, x;
    int twolen = two.size();
    for(int i=0;i<twolen;i++){
        y.push(two[i].first);
        x.push(two[i].second);
               
    }
    while(!x.empty()){
        int fy = y.front(), fx = x.front();
        y.pop();
        x.pop();
        for(int i=0;i<4;i++){
            int imsiy = fy+dy[i], imsix = fx+dx[i];
            
            if(imsiy < 0 || imsiy >= n || imsix < 0 || imsix >= m) continue;
            
            if(arr[imsiy][imsix] == 0){
                arr[imsiy][imsix] = 2;
                y.push(imsiy);
                x.push(imsix);
            }
        }
        
    }
    int cnt = 0;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(arr[i][j] == 0) cnt++;
   //         cout << arr[i][j] << ' ';
        }
  //      cout << "\n";
    }
    maxi = max(maxi,cnt);
}

int main(){
    cin >> n >> m;
    
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            scanf("%d",&arr[i][j]);
            arr2[i][j] = arr[i][j];
            if(arr[i][j] == 0) {
                v.push_back(make_pair(i,j));
            }
            if(arr[i][j] == 2)
                two.push_back(make_pair(i,j));
        }
    }
    int len = v.size();
    for(int i=0;i<len;i++){
        for(int j=i+1;j<len;j++){
            for(int k=j+1;k<len;k++){
      //          cout << v[i].first << " " << v[i].second << '\n';
      //          cout << v[j].first << " " << v[j].second << '\n';
       //         cout << v[k].first << " " << v[k].second << '\n';
                arr[v[i].first][v[i].second] = 1;
                arr[v[j].first][v[j].second] = 1;
                arr[v[k].first][v[k].second] = 1;
                bfs();
           //     cout << maxi;
           //     cout << "\n\n";
                // 초기화
                for(int l=0;l<n;l++){
                    for(int z=0;z<m;z++){
             //           if(v[j].first>=1)
               //        cout << arr2[l][z] << ' ';
                       arr[l][z] = arr2[l][z]; 
                    }
                //    cout << '\n';
                }
                
            }
        }
    }
    cout << maxi;
    
}
