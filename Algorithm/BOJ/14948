#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000007
#define mod 1000000007
int n, m, arr[101][101], dy[4] = {-1,0,1,0}, dx[4] = {0,1,0,-1};
int dp[101][101][2];
int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			cin >> arr[i][j];
			dp[i][j][0] = dp[i][j][1] = inf;
		}
	}
	
	queue<int> y,x;
	queue<bool> z;
	y.push(0);
	x.push(0);
	z.push(false);
	dp[0][0][0] = dp[0][0][1] = arr[0][0];

	while(!x.empty()){
		int xf = x.front(), yf = y.front();
		bool zf = z.front();
		x.pop(), y.pop(), z.pop();
	//	cout << yf << ' ' << xf << ' ' << zf << '\n';
		
		for(int i=0;i<4;i++){
			int imsiy = yf+dy[i], imsix = xf+dx[i], imsiy2 = yf+dy[i]+dy[i], imsix2 = xf+dx[i]+dx[i];
			
			if(imsiy < 0 || imsiy >= n || imsix < 0 || imsix >= m) continue;
			
			if(dp[imsiy][imsix][zf] > max(arr[imsiy][imsix], dp[yf][xf][zf])){
				dp[imsiy][imsix][zf] = max(arr[imsiy][imsix], dp[yf][xf][zf]);
				y.push(imsiy);
				x.push(imsix);
				z.push(zf);
		
			}
			
			if(imsiy2 < 0 || imsiy2 >= n || imsix2 < 0 || imsix2 >= m) continue;
			
			if(dp[imsiy2][imsix2][1] > max(arr[imsiy2][imsix2], dp[yf][xf][zf]) && zf == false){
				dp[imsiy2][imsix2][1] = max(arr[imsiy2][imsix2], dp[yf][xf][zf]);
				y.push(imsiy2);
				x.push(imsix2);
				z.push(true);
			
			}

			
		}	// for
		
		
	}	// while
	cout << min(dp[n-1][m-1][0],dp[n-1][m-1][1]);
}
