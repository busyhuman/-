#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
const int row = 12;
const int col = 6;
string arr[13];
int dy[4] = {-1, 0 , 1, 0}, dx[4] = {0, 1, 0, -1};
bool visit[row+1][col+1];
int dfs(int y, int x, char c){
	int res=1;
	for(int i=0;i<4;i++){
		int imsiy = y+dy[i], imsix = x+dx[i];
		if(imsiy < 0 || imsix < 0 || imsiy >= row || imsix >= col) continue;
		if(visit[imsiy][imsix]) continue;
		if(arr[imsiy][imsix] == c){
			visit[imsiy][imsix] = true;
			res += dfs(imsiy, imsix, c);
		}
	}
	return res;
}

void erasing(int y, int x, char c){
	arr[y][x] = '.';
	for(int i=0;i<4;i++){
		int imsiy = y+dy[i], imsix = x+dx[i];
		if(imsiy < 0 || imsix < 0 || imsiy >= row || imsix >= col) continue;
		if(arr[imsiy][imsix] == c) {
			arr[imsiy][imsix] = '.';
			erasing(imsiy, imsix, c);
		}
	}
}

void arrangeArray(){
	for(int i=0;i<col;i++){
		int idx = row-1;
		for(int j=row-1;j>=0;j--){
			if( arr[j][i] != '.'){
				char imsi = arr[j][i];
				arr[j][i] = '.';
				arr[idx--][i] = imsi;
			}
		}
	}
}

void printArr(){
	
	for(int i=0;i<row;i++){
		for(int j=0;j<col;j++){
			cout << arr[i][j];
		}
		cout << '\n';
	}
	cout << '\n';
}

int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
    for(int i=0;i<row;i++)
		cin >> arr[i];
	bool isChanged = true;
	int ans = 0;
	
	while(isChanged){
		isChanged = false;
		memset(visit, false, sizeof(visit) );
		for(int i=0;i<row;i++){
			for(int j=0;j<col;j++){
				if( arr[i][j] != '.' && !visit[i][j]){
					visit[i][j] = true;
					int cnt = dfs(i, j, arr[i][j]);
					
					if(cnt >= 4){
						isChanged = true;
						erasing(i, j, arr[i][j]);	
					}
				}
				
			}
		}
	
		if(isChanged) {
			arrangeArray();
			ans++;
	//		printArr();
		}
	}
	cout << ans;
}
