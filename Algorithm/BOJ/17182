#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
using namespace std;
#define inf 2000000000
#define mod 1000000007
int m,n,arr[11][11], dp[11][11], mini= inf;
bool visit[11];

void dfs(int now, int sum, int cnt){
	if(cnt+1 == n){
		mini = min(mini, sum);
		return;
	}
	
	for(int i=0;i<n;i++){
		if(now == i || visit[i]) continue;
		visit[i] = true;
		dfs(i, sum+dp[now][i], cnt+1);
		visit[i] = false;
	}
}
int main() {
    ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n >> m;
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			cin >> arr[i][j];
			dp[i][j] = inf;
		}
	}
	for(int k=0;k<n;k++)
		for(int i=0;i<n;i++)
			for(int j=0;j<n;j++)
				dp[i][j] = min(dp[i][j] , arr[i][k] + arr[k][j]);

	visit[m] =true;
	dfs(m, 0, 0);
	cout << mini;
}
